{"version":3,"sources":["webpack:///../../../src/mixins/delayable/index.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/mixins/dependent/index.ts"],"names":["Vue","extend","name","props","openDelay","type","Number","String","default","closeDelay","data","openTimeout","undefined","closeTimeout","methods","clearDelay","clearTimeout","this","runDelay","cb","delay","parseInt","setTimeout","isActive","open","close","stackElement","stackExclude","stackMinZIndex","computed","activeZIndex","window","content","$refs","index","getMaxZIndex","getZIndex","exclude","base","$el","zis","activeElements","document","getElementsByClassName","length","includes","push","Math","max","_arrayWithoutHoles","arr","Array","isArray","arrayLikeToArray","_iterableToArray","iter","Symbol","iterator","from","_nonIterableSpread","TypeError","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","baseMixins","mixins","Delayable","Toggleable","activator","validator","val","disabled","Boolean","internalActivator","openOnClick","openOnHover","openOnFocus","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","getSlotType","consoleError","addActivatorEvents","beforeDestroy","removeActivatorEvents","getActivator","genActivatorListeners","keys","Object","key","addEventListener","genActivator","node","getSlot","assign","getValueProxy","on","attrs","genActivatorAttributes","role","mouseenter","e","mouseleave","click","focus","stopPropagation","target","querySelector","vm","componentInstance","$options","some","m","options","elm","currentTarget","nodeType","Node","ELEMENT_NODE","getContentSlot","self","removeEventListener","resetActivator","validateAttachTarget","removeActivator","forEach","parentNode","removeChild","Bootable","attach","contentClass","hasDetached","initDetach","hasContent","$nextTick","beforeMount","firstChild","nextSibling","insertBefore","deactivated","destroyed","isConnected","observer","MutationObserver","list","record","removedNodes","disconnect","observe","subtree","childList","getScopeIdAttrs","scopeId","getObjectValueByPath","$vnode","_isDestroyed","appendChild","consoleWarn","searchChildren","children","results","child","isDependent","$children","closeDependents","openDependents","getOpenDependents","getOpenDependentElements","result","getClickableDependentElements","overlay"],"mappings":"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","file":"js/chunk-ad6186a2.5e999f88.js","sourcesContent":["import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: (this.openOnClick && !this.openOnHover) ? 'button' : undefined,\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else if (this.openOnClick) {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      // The activator should only be a valid element (Ignore comments and text nodes)\n      this.activatorElement = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options {\n  $el: HTMLElement\n  $refs: {\n    content?: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\nfunction removeActivator (activator: VNode[]) {\n  activator.forEach(node => {\n    node.elm &&\n    node.elm.parentNode &&\n    node.elm.parentNode.removeChild(node.elm)\n  })\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    if (\n      this.$refs.content &&\n      this.$refs.content.parentNode\n    ) {\n      this.$refs.content.parentNode.removeChild(this.$refs.content)\n    }\n  },\n\n  destroyed () {\n    if (this.activatorNode) {\n      const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n      if (this.$el.isConnected) {\n        // Component has been destroyed but the element still exists, we must be in a transition\n        // Wait for the transition to finish before cleaning up the detached activator\n        const observer = new MutationObserver(list => {\n          if (\n            list.some(record => Array.from(record.removedNodes).includes(this.$el))\n          ) {\n            observer.disconnect()\n            removeActivator(activator)\n          }\n        })\n        observer.observe(this.$el.parentNode!, { subtree: false, childList: true })\n      } else {\n        removeActivator(activator)\n      }\n    }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport mixins from '../../util/mixins'\nimport { VOverlay } from '../../components/VOverlay'\n\ninterface options {\n  $el: HTMLElement\n  $refs: {\n    content?: HTMLElement\n  }\n  overlay?: InstanceType<typeof VOverlay>\n}\n\ninterface DependentInstance extends Vue {\n  isActive?: boolean\n  isDependent?: boolean\n}\n\nfunction searchChildren (children: Vue[]): DependentInstance[] {\n  const results = []\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index] as DependentInstance\n    if (child.isActive && child.isDependent) {\n      results.push(child)\n    } else {\n      results.push(...searchChildren(child.$children))\n    }\n  }\n\n  return results\n}\n\n/* @vue/component */\nexport default mixins<Vue & options>().extend({\n  name: 'dependent',\n\n  data () {\n    return {\n      closeDependents: true,\n      isActive: false,\n      isDependent: true,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) return\n\n      const openDependents = this.getOpenDependents()\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false\n      }\n    },\n  },\n\n  methods: {\n    getOpenDependents (): any[] {\n      if (this.closeDependents) return searchChildren(this.$children)\n\n      return []\n    },\n    getOpenDependentElements (): HTMLElement[] {\n      const result = []\n      const openDependents = this.getOpenDependents()\n\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements())\n      }\n\n      return result\n    },\n    getClickableDependentElements (): HTMLElement[] {\n      const result = [this.$el]\n      if (this.$refs.content) result.push(this.$refs.content)\n      if (this.overlay) result.push(this.overlay.$el as HTMLElement)\n      result.push(...this.getOpenDependentElements())\n\n      return result\n    },\n  },\n})\n"],"sourceRoot":""}